package com.taotao.search.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.apache.solr.client.solrj.SolrQuery;
import org.apache.solr.client.solrj.SolrServerException;
import org.apache.solr.client.solrj.impl.CloudSolrServer;
import org.apache.solr.client.solrj.response.QueryResponse;
import org.apache.solr.common.SolrDocument;
import org.apache.solr.common.SolrDocumentList;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.taotao.common.pojo.TaoResult;
import com.taotao.manager.pojo.Item;
import com.taotao.search.service.SearchService;

@Service
public class SearchServiceImpl implements SearchService {

	@Autowired
	private CloudSolrServer cloudSolrServer;

	@Override
	public TaoResult<Item> search(String q, Integer page, Integer rows) {
		// 声明返回结果
		TaoResult<Item> taoResult = new TaoResult<>();

		// 创建搜索对象
		SolrQuery solrQuery = new SolrQuery();

		// 判断搜索关键词是否为非空
		if (StringUtils.isNotBlank(q)) {
			// 设置搜索语法
			solrQuery.setQuery("item_title:" + q + " AND item_status:1");
		} else {
			// 如果是空，搜索所有数据
			solrQuery.setQuery("item_status:1");
		}

		// 设置分页
		solrQuery.setStart((page - 1) * rows);
		solrQuery.setRows(rows);

		// 设置高亮
		// 开启高亮
		solrQuery.setHighlight(true);
		// 设置高亮字段
		solrQuery.addHighlightField("item_title");
		// 设置前缀
		solrQuery.setHighlightSimplePre("<font color='red'>");
		// 设置后缀
		solrQuery.setHighlightSimplePost("</font>");

		try {
			// 使用CloudSolrServer实现查询，返回response
			QueryResponse response = this.cloudSolrServer.query(solrQuery);

			// 解析response结果集，获取results
			SolrDocumentList results = response.getResults();

			// 声明存放商品的容器
			List<Item> list = new ArrayList<>();
			// 遍历results，封装返回结果，商品
			for (SolrDocument solrDocument : results) {

			}

			// 封装返回对象taoResult

		} catch (SolrServerException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		// 如果查询有异常，不能返回null，应该返回空对象
		return taoResult;
	}

}
